'''Ron Rivest - Adi Shamir - Leonard Adleman '''

import math
def is_prime(n):
    if n <= 1:
        return False
    for i in range(2, n+ 1):
        if n % i == 0:
            return True
    return False
def gcd(a, b):
    while b != 0:
        a, b = b, a % b
    return a
p = int(input("Enter prime number p: "))
q = int(input("Enter prime number q: "))
e = int(input("Enter public exponent e: "))
m = int(input("Enter message m (as integer): "))
if is_prime(p) and is_prime(q):
    print("RSA possible. Proceeding...")
else:
    print("RSA not possible. p or q not prime.")
    exit()
n = p * q
phi_n = (p - 1) * (q - 1)
if gcd(e, phi_n) == 1:
    print(f"GCD of e and Ï†(n)  got gcd = {gcd(e, phi_n)}")
    d = pow(e, -1, phi_n)
    c = pow(m, e, n)
    print(f"Encrypted message (ciphertext): {c}")
    M = pow(c, d, n)
    print(f"Decrypted message (original): {M}")
else:
    print("gcd is not 1")
